.panel {
	--clip-point: calc((var(--panel-corner-clip-size) - (var(--panel-border-size) / 2)) * var(--ui-scale) * 1px);

	clip-path: polygon(
		0 var(--clip-point),
		var(--clip-point) 0,
		100% 0,
		100% calc(100% - var(--clip-point)),
		calc(100% - var(--clip-point)) 100%,
		0 100%
	);
	display: flex;
	flex-direction: column;
	overflow: hidden;
	padding: calc((var(--panel-border-size) + var(--panel-padding)) * var(--ui-scale) * 1px);
	position: relative;

	&:after {
		background-color: var(--panel-border-color);
		clip-path: generateCornerCutPath((
			'borderSize': $panelBorderSize,
			'clipSize': $panelCornerClipSize,
			'isBorder': true,
			'uiScale': var(--ui-scale),
		));
		content: '';
		display: flex;
		inset: 0;
		position: absolute;
		transition-duration: 0.2s;
		transition-property: background-color;
	}

	&[data-open]:not([data-open="false"]) {
		flex-shrink: 1;

		> header:after {
			transform: rotate(180deg);
		}
	}

	&.is-centered {
		align-items: center;
		justify-content: center;
	}

	&.is-collapsible > header {
		align-items: center;

		&:after {
			background-color: var(--palette-white);
			clip-path: polygon(
				/* top left */
				0 0,
				calc(1px * var(--ui-scale)) 0,
				calc(1px * var(--ui-scale)) calc(1px * var(--ui-scale)),
				calc(2px * var(--ui-scale)) calc(1px * var(--ui-scale)),
				calc(2px * var(--ui-scale)) calc(2px * var(--ui-scale)),

				/* top right */
				calc(100% - (2px * var(--ui-scale))) calc(2px * var(--ui-scale)),
				calc(100% - (2px * var(--ui-scale))) calc(1px * var(--ui-scale)),
				calc(100% - (1px * var(--ui-scale))) calc(1px * var(--ui-scale)),
				calc(100% - (1px * var(--ui-scale))) 0,
				100% 0,

				/* bottom right */
				100% calc(100% - (2px * var(--ui-scale))),
				calc(100% - (1px * var(--ui-scale))) calc(100% - (2px * var(--ui-scale))),
				calc(100% - (1px * var(--ui-scale))) calc(100% - (1px * var(--ui-scale))),
				calc(100% - (2px * var(--ui-scale))) calc(100% - (1px * var(--ui-scale))),
				calc(100% - (2px * var(--ui-scale))) 100%,

				/* bottom left */
				calc(2px * var(--ui-scale)) 100%,
				calc(2px * var(--ui-scale)) calc(100% - (1px * var(--ui-scale))),
				calc(1px * var(--ui-scale)) calc(100% - (1px * var(--ui-scale))),
				calc(1px * var(--ui-scale)) calc(100% - (2px * var(--ui-scale))),
				0 calc(100% - (2px * var(--ui-scale))),
			);
			content: '';
			display: block;
			margin-left: auto;
			height: calc(3px * var(--ui-scale));
			transform: rotate(0deg);
			width: calc(5px * var(--ui-scale));
		}
	}

	&.is-primary {
		--panel-border-color: var(--palette-white);
	}

	> header {
		cursor: pointer;
		display: flex;
	}

	> .panel-bottom {
		margin-top: auto;
	}

	> .panel-content {
		display: flex;
		flex-direction: column;
		flex-grow: 0;
		flex-shrink: 1;
		margin-top: calc(4px * var(--ui-scale));
		max-height: 100%;
		overflow: hidden;

		> .panel-scroller {
			flex-grow: 1;
			flex-shrink: 1;
			max-height: 100%;
			overflow: auto;
		}
	}

	> menu {
		flex-direction: column;
		margin-top: calc(4px * var(--ui-scale));
	}
}
